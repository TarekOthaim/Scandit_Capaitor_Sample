{"version":3,"file":"src_app_scan_scan_module_ts.js","mappings":"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","sources":["./src/app/models/form/barcode-selection-form.model.ts","./src/app/models/form/camera-form.model.ts","./src/app/models/form/index.ts","./src/app/models/form/view-form.model.ts","./src/app/models/index.ts","./src/app/scan/scan-routing.module.ts","./src/app/scan/scan.component.ts","./src/app/scan/scan.module.ts"],"sourcesContent":["import {\n  BarcodeSelectionFreezeBehavior,\n  BarcodeSelectionStrategyType,\n  BarcodeSelectionTapBehavior,\n  BarcodeSelectionTypeName,\n} from '..';\nimport { SettingsFieldName } from '../../config';\nimport { UnitNumber } from '../unit-number.model';\nimport { TypedFormGroup } from '../utils.model';\n\nexport interface BarcodeSelectionSymbologyFormValue {\n  enabled: boolean;\n  colorInverted: boolean;\n  minimum: number;\n  maximum: number;\n  extensions: string[];\n}\n\nexport interface BarcodeSelectionSymbologiesFormValue {\n  [symbology: string]: BarcodeSelectionSymbologyFormValue;\n}\n\nexport interface BarcodeSelectionSelectionTypeFormValue {\n  [SettingsFieldName.SELECTION_TYPE]: BarcodeSelectionTypeName;\n  [SettingsFieldName.FREEZE_BEHAVIOUR]: BarcodeSelectionFreezeBehavior;\n  [SettingsFieldName.TAP_BEHAVIOUR]: BarcodeSelectionTapBehavior;\n  [SettingsFieldName.SELECTION_STRATEGY]: BarcodeSelectionStrategyType;\n}\n\nexport interface BarcodeSelectionFeedbackFormValue {\n  [SettingsFieldName.FEEDBACK_SOUND]?: boolean;\n  [SettingsFieldName.FEEDBACK_VIBRATION]?: boolean;\n}\n\nexport interface BarcodeSelectionCodeDuplicateFilterFormValue {\n  [SettingsFieldName.CODE_DUPLICATE_FILTER]?: number;\n}\n\nexport interface BarcodeSelectionSingleBarcodeAutoDetectionFormValue {\n  [SettingsFieldName.SINGLE_BARCODE_AUTO_DETECTION]?: boolean;\n}\n\nexport interface BarcodeSelectionPointOfInterestFormValue {\n  [SettingsFieldName.BS_POINT_OF_INTEREST_ENABLED]: boolean;\n  [SettingsFieldName.BS_POINT_OF_INTEREST_X]: UnitNumber;\n  [SettingsFieldName.BS_POINT_OF_INTEREST_Y]: UnitNumber;\n}\n\nexport interface BarcodeSelectionFormValue {\n  selectionType?: BarcodeSelectionSelectionTypeFormValue;\n  symbologies?: BarcodeSelectionSelectionTypeFormValue;\n  pointOfInterest?: BarcodeSelectionPointOfInterestFormValue;\n  feedback?: BarcodeSelectionFeedbackFormValue;\n  codeDuplicateFilter?: BarcodeSelectionCodeDuplicateFilterFormValue;\n  singleBarcodeAutoDetection?: BarcodeSelectionSingleBarcodeAutoDetectionFormValue;\n}\n\nexport type BarcodeSelectionForm = TypedFormGroup<BarcodeSelectionFormValue>;\nexport type BarcodeSelectionSymbologyForm = TypedFormGroup<BarcodeSelectionSymbologyFormValue>;\nexport type BarcodeSelectionSymbologiesForm = TypedFormGroup<BarcodeSelectionSymbologiesFormValue>;\nexport type BarcodeSelectionPointOfInterestForm = TypedFormGroup<BarcodeSelectionPointOfInterestFormValue>;\nexport type BarcodeSelectionSelectionTypeForm = TypedFormGroup<BarcodeSelectionSelectionTypeFormValue>;\nexport type BarcodeSelectionFeedbackForm = TypedFormGroup<BarcodeSelectionFeedbackFormValue>;\nexport type BarcodeSelectionCodeDuplicateFilterForm = TypedFormGroup<BarcodeSelectionCodeDuplicateFilterFormValue>;\nexport type BarcodeSelectionSingleBarcodeAutoDetectionForm = TypedFormGroup<BarcodeSelectionSingleBarcodeAutoDetectionFormValue>;\n","import { SettingsFieldName } from '../../config';\nimport { TypedFormGroup } from '../utils.model';\n\nexport interface CameraFormValue {\n  [SettingsFieldName.CAMERA_POSITION]: string; // CameraPosition;\n  [SettingsFieldName.DESIRED_TORCH_STATE]: boolean;\n  [SettingsFieldName.PREFERRED_RESOLUTION]: string; // VideoResolution;\n  [SettingsFieldName.ZOOM_FACTOR]: number;\n  [SettingsFieldName.FOCUS_RANGE]: string; // FocusRange;\n}\n\nexport type CameraForm = TypedFormGroup<CameraFormValue>;\n","export * from './form.model';\nexport * from './barcode-selection-form.model';\nexport * from './camera-form.model';\nexport * from './view-form.model';\n","import { SettingsFieldName } from '../../config';\nimport { BarcodeSelectionBasicOverlayStyle, Brush, Color } from '../sdk.model';\nimport { UnitNumber } from '../unit-number.model';\nimport { TypedFormGroup } from '../utils.model';\n\nexport interface ViewScanAreaFormValue {\n  [SettingsFieldName.SCAN_AREA_MARGIN_TOP]: UnitNumber;\n  [SettingsFieldName.SCAN_AREA_MARGIN_RIGHT]: UnitNumber;\n  [SettingsFieldName.SCAN_AREA_MARGIN_BOTTOM]: UnitNumber;\n  [SettingsFieldName.SCAN_AREA_MARGIN_LEFT]: UnitNumber;\n  [SettingsFieldName.SCAN_AREA_GUIDES]: boolean;\n}\n\nexport interface ViewPointOfInterestFormValue {\n  [SettingsFieldName.POINT_OF_INTEREST_X]: UnitNumber;\n  [SettingsFieldName.POINT_OF_INTEREST_Y]: UnitNumber;\n}\n\nexport interface ViewOverlayFormValue {\n  [SettingsFieldName.OVERLAY_STYLE]: BarcodeSelectionBasicOverlayStyle;\n  [SettingsFieldName.TRACKED_BRUSH]: Brush;\n  [SettingsFieldName.AIMED_BRUSH]: Brush;\n  [SettingsFieldName.SELECTING_BRUSH]: Brush;\n  [SettingsFieldName.SELECTED_BRUSH]: Brush;\n  [SettingsFieldName.SHOULD_SHOW_HINTS]: boolean;\n}\n\nexport interface ViewViewfinderFormValue {\n  [SettingsFieldName.FRAME_COLOR]: Color;\n  [SettingsFieldName.DOT_COLOR]: Color;\n}\n\nexport interface ViewFormValue {\n  scanArea?: ViewScanAreaFormValue;\n  pointOfInterest?: ViewPointOfInterestFormValue;\n  overlay?: ViewOverlayFormValue;\n  viewfinder?: ViewViewfinderFormValue;\n}\n\nexport type ViewScanAreaForm = TypedFormGroup<ViewScanAreaFormValue>;\nexport type ViewPointOfInterestForm = TypedFormGroup<ViewPointOfInterestFormValue>;\nexport type ViewOverlayForm = TypedFormGroup<ViewOverlayFormValue>;\nexport type ViewViewfinderForm = TypedFormGroup<ViewViewfinderFormValue>;\nexport type ViewForm = TypedFormGroup<ViewFormValue>;\n","export * from './form';\nexport * from './utils.model';\nexport * from './sdk.model';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ScanComponent } from './scan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScanComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ScanPageRoutingModule {}\n","import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { environment } from 'src/environments/environment';\n\nimport {\n  BarcodeSelectionStrategyType,\n  BarcodeSelectionSymbologyFormValue,\n  BarcodeSelectionTypeName,\n  Brush,\n} from '../models';\nimport { SettingsService } from '../services';\n\ndeclare var Scandit;\n\n@Component({\n  selector: 'app-scan',\n  templateUrl: 'scan.component.html',\n  styleUrls: ['scan.component.scss'],\n})\nexport class ScanComponent implements AfterViewInit {\n  public barcodeSelection;\n  private context;\n  private view;\n  @ViewChild('captureView') captureView: ElementRef<HTMLDivElement>;\n\n  private isPageActive = false;\n\n  private barcodeSelectionSettings = new Scandit.BarcodeSelectionSettings();\n\n  public listener = {\n    didUpdateSelection: async (barcodeSelection, session) => {\n      if (!this.isPageActive) {\n        return;\n      }\n\n      if (session.newlySelectedBarcodes.length === 0) {\n        return;\n      }\n\n      this.captureView.nativeElement.style.zIndex = '-1';\n\n      const barcode = session.newlySelectedBarcodes[0];\n      const symbology = new Scandit.SymbologyDescription(barcode.symbology);\n      const count = await session.getCount(barcode);\n\n      (await this.toastController.getTop())?.dismiss();\n      const toast = await this.toastController.create({\n        message: `Scan Results\\n${symbology.readableName}: ${barcode.data}\\nTimes: ${count}`,\n        duration: 500,\n      });\n\n      toast.onDidDismiss().then(() => {\n        if (this.isPageActive) {\n          this.captureView.nativeElement.style.zIndex = '1';\n        }\n      });\n\n      toast.present();\n    }\n  };\n\n  constructor(\n    private settingsService: SettingsService,\n    private toastController: ToastController,\n  ) { }\n\n  public async ionViewDidEnter() {\n    this.isPageActive = true;\n    this.barcodeSelection.isEnabled = false;\n\n    if (this.settingsService.reset) {\n      this.barcodeSelection.reset();\n    }\n\n    await this.barcodeSelection.applySettings(this.getBarcodeSelectionSettings());\n    this.barcodeSelection.addListener(this.listener);\n\n    await this.applyBarcodeSelectionPointOfInterest();\n    await this.applyFeedbackSettings();\n    await this.applyCodeDuplicateFilterSettings();\n\n    await this.applyCameraSettings();\n    await this.applyViewSettings();\n\n    this.barcodeSelection.isEnabled = true;\n  }\n\n  public ionViewWillLeave() {\n    this.isPageActive = false;\n    this.barcodeSelection.isEnabled = false;\n    this.context.frameSource.switchToDesiredState(Scandit.FrameSourceState.Off);\n  }\n\n  public ngAfterViewInit() {\n    this.context = Scandit.DataCaptureContext.forLicenseKey(environment.scanditLicenseKey);\n    this.barcodeSelection = Scandit.BarcodeSelection.forContext(this.context);\n    this.barcodeSelection.addListener(this.listener);\n  }\n\n  public getBarcodeSelectionSettings() {\n    const enabledSymbologiesSettings = Object.entries(this.settingsService.symbologiesForm.value)\n      .map(([key, value]) => ({ ...value, key }))\n      .filter(settings => settings.enabled);\n\n    const {\n      SELECTION_TYPE,\n      FREEZE_BEHAVIOUR,\n      TAP_BEHAVIOUR,\n      SELECTION_STRATEGY,\n    } = this.settingsService.selectionTypeForm.value;\n\n    if (SELECTION_TYPE === BarcodeSelectionTypeName.Tap) {\n      this.barcodeSelectionSettings.selectionType = Scandit.BarcodeSelectionTapSelection\n        .withFreezeBehaviorAndTapBehavior(FREEZE_BEHAVIOUR, TAP_BEHAVIOUR);\n    } else if (SELECTION_TYPE === BarcodeSelectionTypeName.Aimer) {\n      this.barcodeSelectionSettings.selectionType = Scandit.BarcodeSelectionAimerSelection.aimerSelection;\n      if (SELECTION_STRATEGY === BarcodeSelectionStrategyType.Auto) {\n        this.barcodeSelectionSettings.selectionType.selectionStrategy\n          = Scandit.BarcodeSelectionAutoSelectionStrategy.autoSelectionStrategy;\n      } else if (SELECTION_STRATEGY === BarcodeSelectionStrategyType.Manual) {\n        this.barcodeSelectionSettings.selectionType.selectionStrategy\n          = Scandit.BarcodeSelectionManualSelectionStrategy.manualSelectionStrategy;\n      }\n    }\n\n    this.barcodeSelectionSettings.enableSymbologies(enabledSymbologiesSettings.map(({ key }) => Scandit.Symbology[key]));\n\n    enabledSymbologiesSettings.forEach(settings => this.applySymbologySettings(this.barcodeSelectionSettings, settings));\n\n    this.barcodeSelectionSettings.singleBarcodeAutoDetection\n      = this.settingsService.singleBarcodeAutoDetectionForm.value.SINGLE_BARCODE_AUTO_DETECTION;\n\n    return this.barcodeSelectionSettings;\n  }\n\n  public applyFeedbackSettings() {\n    const { FEEDBACK_VIBRATION, FEEDBACK_SOUND } = this.settingsService.feedbackForm.value;\n\n    const vibration = FEEDBACK_VIBRATION ? Scandit.Vibration.defaultVibration : null;\n    const sound = FEEDBACK_SOUND ? Scandit.Sound.defaultSound : null;\n\n    const feedback = Scandit.BarcodeSelectionFeedback.default;\n    feedback.selection = new Scandit.Feedback(vibration, sound);\n    this.barcodeSelection.feedback = feedback;\n  }\n\n  public applyBarcodeSelectionPointOfInterest() {\n    const { BS_POINT_OF_INTEREST_ENABLED, BS_POINT_OF_INTEREST_X, BS_POINT_OF_INTEREST_Y } = this.settingsService.barcodeSelectionPointOfInterestForm.value;\n\n    if (BS_POINT_OF_INTEREST_ENABLED) {\n      const pointOfInterestX = this.getNumberWithUnit(BS_POINT_OF_INTEREST_X);\n      const pointOfInterestY = this.getNumberWithUnit(BS_POINT_OF_INTEREST_Y);\n      this.barcodeSelection.pointOfInterest = new Scandit.PointWithUnit(pointOfInterestX, pointOfInterestY);\n    } else {\n      this.barcodeSelection.pointOfInterest = null;\n    }\n  }\n\n  public applyCodeDuplicateFilterSettings() {\n    const { CODE_DUPLICATE_FILTER } = this.settingsService.codeDuplicateFilterForm.value;\n\n    const barcodeSelectionSettings = this.getBarcodeSelectionSettings();\n\n    barcodeSelectionSettings.codeDuplicateFilter = CODE_DUPLICATE_FILTER * 1000;\n\n    this.barcodeSelection.applySettings(barcodeSelectionSettings);\n  }\n\n  public applyCameraSettings(): Promise<void> {\n    const {\n      DESIRED_TORCH_STATE,\n      CAMERA_POSITION,\n      PREFERRED_RESOLUTION,\n      ZOOM_FACTOR,\n      FOCUS_RANGE,\n    } = this.settingsService.cameraForm.value;\n\n    const cameraSettings = new Scandit.CameraSettings({\n      preferredResolution: PREFERRED_RESOLUTION,\n      zoomFactor: ZOOM_FACTOR,\n      focusRange: FOCUS_RANGE,\n    });\n\n    const camera = Scandit.Camera.atPosition(CAMERA_POSITION);\n\n    camera.desiredTorchState = DESIRED_TORCH_STATE ? Scandit.TorchState.On : Scandit.TorchState.Off;\n\n    const switchToDesiredStatePromise = this.context.frameSource ?\n      this.context.frameSource.switchToDesiredState(Scandit.FrameSourceState.Off) :\n      Promise.resolve();\n\n    return switchToDesiredStatePromise\n      .then(() => camera.applySettings(cameraSettings))\n      .then(() => this.context.setFrameSource(camera))\n      .then(() => camera.switchToDesiredState(Scandit.FrameSourceState.On));\n  }\n\n  public applyViewSettings() {\n    const { SCAN_AREA_GUIDES } = this.settingsService.scanAreaForm.value;\n\n    this.captureView.nativeElement.style.zIndex = '1';\n    if (!this.view) {\n      this.view = Scandit.DataCaptureView.forContext(this.context);\n    }\n\n    this.applyPointOfInterestSettings(this.view);\n    this.applyScanAreaSettings(this.view);\n\n    this.view.connectToElement(this.captureView.nativeElement);\n\n    this.view.zoomGesture = null;\n\n    this.applyOverlayStyleSettings(SCAN_AREA_GUIDES, this.view);\n  }\n\n  private applySymbologySettings(\n    barcodeSelectionSettings,\n    settings: BarcodeSelectionSymbologyFormValue & { key: string },\n  ) {\n    const symbologySettings = barcodeSelectionSettings.settingsForSymbology(Scandit.Symbology[settings.key]);\n\n    if (settings.colorInverted !== undefined) {\n      symbologySettings.isColorInvertedEnabled = settings.colorInverted;\n    }\n\n    if (settings.minimum !== undefined && settings.maximum !== undefined) {\n      const activeSymbolCounts = new Array(settings.maximum + 1 - settings.minimum)\n        .fill(0)\n        .map((_, index) => settings.minimum + index);\n\n      symbologySettings.activeSymbolCounts = activeSymbolCounts;\n    }\n\n    if (settings.extensions !== undefined && Array.isArray(settings.extensions)) {\n      symbologySettings.enabledExtensions.forEach(extension => symbologySettings.setExtensionEnabled(extension, false));\n      settings.extensions.forEach(extension => symbologySettings.setExtensionEnabled(extension, true));\n    }\n  }\n\n  private applyPointOfInterestSettings(view) {\n    const { POINT_OF_INTEREST_X, POINT_OF_INTEREST_Y } = this.settingsService.pointOfInterestForm.value;\n\n    const pointOfInterestX = this.getNumberWithUnit(POINT_OF_INTEREST_X);\n    const pointOfInterestY = this.getNumberWithUnit(POINT_OF_INTEREST_Y);\n    const pointOfInterest = new Scandit.PointWithUnit(pointOfInterestX, pointOfInterestY);\n\n    view.pointOfInterest = pointOfInterest;\n  }\n\n  private applyScanAreaSettings(view) {\n    const {\n      SCAN_AREA_MARGIN_BOTTOM,\n      SCAN_AREA_MARGIN_LEFT,\n      SCAN_AREA_MARGIN_RIGHT,\n      SCAN_AREA_MARGIN_TOP,\n    } = this.settingsService.scanAreaForm.value;\n\n    const scanAreaTop = this.getNumberWithUnit(SCAN_AREA_MARGIN_TOP);\n    const scanAreaRight = this.getNumberWithUnit(SCAN_AREA_MARGIN_RIGHT);\n    const scanAreaBottom = this.getNumberWithUnit(SCAN_AREA_MARGIN_BOTTOM);\n    const scanAreaLeft = this.getNumberWithUnit(SCAN_AREA_MARGIN_LEFT);\n\n    view.scanAreaMargins = new Scandit.MarginsWithUnit(scanAreaLeft, scanAreaRight, scanAreaTop, scanAreaBottom);\n  }\n\n  private applyViewfinderSettings(overlay) {\n    const {\n      FRAME_COLOR,\n      DOT_COLOR,\n    } = this.settingsService.viewfinderForm.value;\n\n    overlay.viewfinder.frameColor = this.getColor(FRAME_COLOR);\n    overlay.viewfinder.dotColor = this.getColor(DOT_COLOR);\n  }\n\n  private applyOverlayStyleSettings(SCAN_AREA_GUIDES, view) {\n    const {\n      OVERLAY_STYLE,\n      TRACKED_BRUSH,\n      AIMED_BRUSH,\n      SELECTING_BRUSH,\n      SELECTED_BRUSH,\n      SHOULD_SHOW_HINTS\n    } = this.settingsService.overlayForm.value;\n\n    view.overlays.forEach(overlay => view.removeOverlay(overlay))\n\n    const overlay = Scandit.BarcodeSelectionBasicOverlay.withBarcodeSelectionForViewWithStyle(\n      this.barcodeSelection,\n      view,\n      OVERLAY_STYLE,\n    );\n\n    overlay.shouldShowScanAreaGuides = SCAN_AREA_GUIDES;\n    overlay.shouldShowHints = SHOULD_SHOW_HINTS;\n\n    overlay.trackedBrush = TRACKED_BRUSH == Brush.Default ? overlay.trackedBrush : new Scandit.Brush(this.getColor(TRACKED_BRUSH), this.getColor(TRACKED_BRUSH), 1);\n    overlay.aimedBrush = AIMED_BRUSH == Brush.Default ? overlay.aimedBrush : new Scandit.Brush(this.getColor(AIMED_BRUSH), this.getColor(AIMED_BRUSH), 1);\n    overlay.selectingBrush = SELECTING_BRUSH == Brush.Default ? overlay.selectingBrush: new Scandit.Brush(this.getColor(SELECTING_BRUSH), this.getColor(SELECTING_BRUSH), 1);\n    overlay.selectedBrush = SELECTED_BRUSH == Brush.Default ? overlay.selectedBrush: new Scandit.Brush(this.getColor(SELECTED_BRUSH), this.getColor(SELECTED_BRUSH), 1);\n\n    this.applyViewfinderSettings(overlay);\n  }\n\n  private getColor(rgbaString: string) {\n    const parts = rgbaString.replace('rgba(', '').replace(')', '').split(',');\n    return Scandit.Color.fromRGBA(...parts);\n  }\n\n  private getNumberWithUnit({ value, unit }: { value: number; unit: string }) {\n    return new Scandit.NumberWithUnit(value, unit);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { ScanComponent } from './scan.component';\nimport { ScanPageRoutingModule } from './scan-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ScanPageRoutingModule,\n  ],\n  declarations: [ScanComponent]\n})\nexport class ScanPageModule {}\n"],"names":[],"sourceRoot":"webpack:///"}